{
    "ast": null,
    "code": "import _asyncToGenerator from \"D:/Work/RadicalLedger_projects/SIOP/did-siop-browser-ext/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport EthrDID from 'ethr-did';\nimport W3 from 'web3';\n\nconst nacl = require('tweetnacl');\n\nimport { encode as multibaseEncode } from 'multibase';\nimport { addPrefix as mutlicodeAddPrefix } from 'multicodec';\nimport * as base58 from 'bs58';\n\nconst createEthrDid = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (network) {\n    const networks = {\n      'mainnet': 'https://mainnet.infura.io/v3/e0a6ac9a2c4a4722970325c36b728415',\n      'rinkeby': 'https://rinkeby.infura.io/v3/e0a6ac9a2c4a4722970325c36b728415',\n      'ropsten': 'https://ropsten.infura.io/v3/e0a6ac9a2c4a4722970325c36b728415',\n      'goerli': 'https://goerli.infura.io/v3/e0a6ac9a2c4a4722970325c36b728415',\n      'kovan': 'https://kovan.infura.io/v3/e0a6ac9a2c4a4722970325c36b728415'\n    };\n    const ethrProvider = new W3.providers.HttpProvider(networks[network]);\n    const w3 = new W3();\n    const acc = w3.eth.accounts.create();\n    const ethrDid = new EthrDID({\n      address: acc.address,\n      privateKey: acc.privateKey,\n      provider: ethrProvider\n    });\n    return {\n      did: ethrDid.did,\n      privateKey: acc.privateKey.replace('0x', '')\n    };\n  });\n\n  return function createEthrDid(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst createKeyDid = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    let keyPair = nacl.sign.keyPair();\n    let methodSpecificBytes = Buffer.from(multibaseEncode('base58btc', mutlicodeAddPrefix('ed25519-pub', keyPair.publicKey)));\n    let did = 'did:key:' + methodSpecificBytes.toString();\n    let privateKeyString = base58.encode(keyPair.secretKey);\n    return {\n      did,\n      privateKey: privateKeyString\n    };\n  });\n\n  return function createKeyDid() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport const DidCreators = {\n  ethr: createEthrDid,\n  key: createKeyDid\n};",
    "map": null,
    "metadata": {},
    "sourceType": "module"
}
