{
    "ast": null,
    "code": "import _asyncToGenerator from \"D:/Work/RadicalLedger_projects/SIOP/did-siop-browser-ext/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/background-message.service\";\nimport * as i3 from \"src/app/identity.service\";\nconst _c0 = [\"newDID\"];\nconst _c1 = [\"modalClose\"];\nconst _c2 = [\"modalInfo\"];\nconst _c3 = [\"modalYes\"];\nconst _c4 = [\"modalOpen\"];\nexport let ChangeDIDModalComponent = /*#__PURE__*/(() => {\n  class ChangeDIDModalComponent {\n    constructor(toastrService, messageService, identityService) {\n      this.toastrService = toastrService;\n      this.messageService = messageService;\n      this.identityService = identityService;\n      this.didChanged = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    open() {\n      this.modalInfo.nativeElement.innerText = '';\n      this.newDID.nativeElement.value = '';\n      this.modelOpen.nativeElement.click();\n    }\n\n    changeDID(did) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.modalInfo.nativeElement.classList.remove('error');\n\n        _this.modalInfo.nativeElement.classList.add('waiting');\n\n        _this.modalInfo.nativeElement.innerText = 'Please wait';\n        _this.modalClose.nativeElement.disabled = true;\n        _this.modalYes.nativeElement.disabled = true;\n\n        if (did) {\n          _this.messageService.sendMessage({\n            task: 0\n            /* TASKS.CHANGE_DID */\n            ,\n            did: did\n          }, response => {\n            if (response.result) {\n              _this.identityService.setCurrentDID(did);\n\n              _this.identityService.setSigningInfoSet([]);\n\n              _this.newDID.nativeElement.value = '';\n\n              _this.modalInfo.nativeElement.classList.remove('waiting');\n\n              _this.modalClose.nativeElement.disabled = false;\n              _this.modalYes.nativeElement.disabled = false;\n\n              _this.modalClose.nativeElement.click();\n\n              _this.didChanged.emit(true);\n\n              _this.toastrService.success(response.result, 'DID_SIOP', {\n                onActivateTick: true,\n                positionClass: 'toast-bottom-center'\n              });\n            } else if (response.err) {\n              _this.modalInfo.nativeElement.innerText = response.err;\n\n              _this.modalInfo.nativeElement.classList.remove('waiting');\n\n              _this.modalInfo.nativeElement.classList.add('error');\n\n              _this.modalClose.nativeElement.disabled = false;\n              _this.modalYes.nativeElement.disabled = false;\n            }\n          });\n        } else {\n          _this.modalInfo.nativeElement.innerText = 'Please enter a valid DID';\n\n          _this.modalInfo.nativeElement.classList.remove('waiting');\n\n          _this.modalInfo.nativeElement.classList.add('error');\n\n          _this.modalClose.nativeElement.disabled = false;\n          _this.modalYes.nativeElement.disabled = false;\n        }\n      })();\n    }\n\n  }\n\n  ChangeDIDModalComponent.ɵfac = function ChangeDIDModalComponent_Factory(t) {\n    return new (t || ChangeDIDModalComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.BackgroundMessageService), i0.ɵɵdirectiveInject(i3.IdentityService));\n  };\n\n  ChangeDIDModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangeDIDModalComponent,\n    selectors: [[\"change-did-modal\"]],\n    viewQuery: function ChangeDIDModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.newDID = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalClose = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalInfo = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalYes = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modelOpen = _t.first);\n      }\n    },\n    outputs: {\n      didChanged: \"didChanged\"\n    },\n    decls: 29,\n    vars: 0,\n    consts: [[\"data-toggle\", \"modal\", \"data-target\", \"#changeDIDModal\", 1, \"modal-trigger\"], [\"modalOpen\", \"\"], [\"id\", \"changeDIDModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"changeDIDModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\"], [\"modal\", \"\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"changeDIDModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"warning\"], [1, \"input-group\", \"input-group-sm\"], [\"id\", \"newDID\", \"aria-label\", \"Small\", \"aria-describedby\", \"inputGroup-sizing-sm\", 1, \"form-control\"], [\"newDID\", \"\"], [\"modalInfo\", \"\"], [1, \"modal-footer\", \"d-flex\", \"justify-content-start\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-ok\", 3, \"click\"], [\"modalYes\", \"\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-link\", \"btn-cancel\"], [\"modalClose\", \"\"]],\n    template: function ChangeDIDModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"button\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2, 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h5\", 7);\n        i0.ɵɵtext(8, \"Enter New DID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8)(10, \"span\", 9);\n        i0.ɵɵtext(11, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"p\", 11);\n        i0.ɵɵtext(14, \"Warning! Changing DID will remove all the keys related to current DID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \"New DID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12);\n        i0.ɵɵelement(18, \"textarea\", 13, 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"p\", null, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 16)(23, \"button\", 17, 18);\n        i0.ɵɵlistener(\"click\", function ChangeDIDModalComponent_Template_button_click_23_listener() {\n          i0.ɵɵrestoreView(_r6);\n\n          const _r2 = i0.ɵɵreference(19);\n\n          return i0.ɵɵresetView(ctx.changeDID(_r2.value));\n        });\n        i0.ɵɵtext(25, \"Change DID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 19, 20);\n        i0.ɵɵtext(28, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    styles: [\".input-group-sm[_ngcontent-%COMP%]{margin-bottom:10px}.input-group-text[_ngcontent-%COMP%]{width:100px}.input-group-sm[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none}.warning[_ngcontent-%COMP%]{color:#ff4500}.success[_ngcontent-%COMP%]{color:green}.error[_ngcontent-%COMP%]{color:red}.waiting[_ngcontent-%COMP%]{color:#24c1b6}.modal-header[_ngcontent-%COMP%]{border-bottom:1px solid #24c1b6}.modal-footer[_ngcontent-%COMP%]{border:none}.btn-ok[_ngcontent-%COMP%]{background-color:#24c1b6;border:1px solid #24c1b6;border-radius:40px;min-width:100px}.btn-cancel[_ngcontent-%COMP%]{color:#24c1b6}.btn-link[_ngcontent-%COMP%]:active:focus{background-color:transparent}.btn-link[_ngcontent-%COMP%]:focus{outline:none!important;box-shadow:none}.modal-trigger[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return ChangeDIDModalComponent;\n})();",
    "map": null,
    "metadata": {},
    "sourceType": "module"
}
