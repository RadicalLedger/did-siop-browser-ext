{"ast":null,"code":"import r from \"ethjs-provider-http\";\nimport e from \"ethjs-query\";\nimport t from \"ethjs-contract\";\nimport i from \"ethr-did-resolver/contracts/ethr-did-registry.json\";\nimport { SimpleSigner as n, createJWT as o, verifyJWT as s, toEthereumAddress as u } from \"did-jwt\";\nimport { Buffer as a } from \"buffer\";\nimport { stringToBytes32 as c, delegateTypes as d, REGISTRY as h } from \"ethr-did-resolver\";\nvar f = new (0, require(\"elliptic\").ec)(\"secp256k1\"),\n    v = d.Secp256k1VerificationKey2018;\n\nfunction m(r, e) {\n  if (a.isBuffer(e)) return \"0x\" + e.toString(\"hex\");\n  var t = r.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/);\n  return t && \"base64\" === t[6] ? \"0x\" + a.from(e, \"base64\").toString(\"hex\") : e.match(/^0x[0-9a-fA-F]*$/) ? e : \"0x\" + a.from(e).toString(\"hex\");\n}\n\nvar g = function () {\n  function a(r) {\n    var o = this.configureProvider(r),\n        s = new e(o),\n        u = r.registry || h,\n        a = new t(s)(i);\n    if (this.registry = a.at(u), this.address = r.address, !this.address) throw new Error(\"No address is set for EthrDid\");\n    this.did = \"did:ethr:\" + this.address, r.signer ? this.signer = r.signer : r.privateKey && (this.signer = n(r.privateKey));\n  }\n\n  var d = a.prototype;\n  return d.configureProvider = function (e) {\n    return e.provider ? e.provider : e.web3 ? e.web3.currentProvider : new r(e.rpcUrl || \"https://mainnet.infura.io/ethr-did\");\n  }, a.createKeyPair = function () {\n    var r = f.genKeyPair(),\n        e = r.getPublic(\"hex\"),\n        t = r.getPrivate(\"hex\");\n    return {\n      address: u(e),\n      privateKey: t\n    };\n  }, d.lookupOwner = function (r) {\n    void 0 === r && (r = !0);\n\n    try {\n      return r && this.owner ? Promise.resolve(this.owner) : Promise.resolve(this.registry.identityOwner(this.address)).then(function (r) {\n        return r[0];\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.changeOwner = function (r) {\n    try {\n      var e = this;\n      return Promise.resolve(e.lookupOwner()).then(function (t) {\n        return Promise.resolve(e.registry.changeOwner(e.address, r, {\n          from: t\n        })).then(function (t) {\n          return e.owner = r, t;\n        });\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.addDelegate = function (r, e) {\n    var t = e.delegateType,\n        i = void 0 === t ? v : t,\n        n = e.expiresIn,\n        o = void 0 === n ? 86400 : n;\n\n    try {\n      var s = this;\n      return Promise.resolve(s.lookupOwner()).then(function (e) {\n        return s.registry.addDelegate(s.address, i, r, o, {\n          from: e\n        });\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.revokeDelegate = function (r, e) {\n    void 0 === e && (e = v);\n\n    try {\n      var t = this;\n      return Promise.resolve(t.lookupOwner()).then(function (i) {\n        return t.registry.revokeDelegate(t.address, e, r, {\n          from: i\n        });\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.setAttribute = function (r, e, t, i) {\n    void 0 === t && (t = 86400);\n\n    try {\n      var n = this;\n      return Promise.resolve(n.lookupOwner()).then(function (o) {\n        return n.registry.setAttribute(n.address, c(r), m(r, e), t, {\n          from: o,\n          gas: i\n        });\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.revokeAttribute = function (r, e, t) {\n    try {\n      var i = this;\n      return Promise.resolve(i.lookupOwner()).then(function (n) {\n        return i.registry.revokeAttribute(i.address, c(r), m(r, e), {\n          from: n,\n          gas: t\n        });\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.createSigningDelegate = function (r, e) {\n    void 0 === r && (r = v), void 0 === e && (e = 86400);\n\n    try {\n      var t = a.createKeyPair();\n      return this.signer = n(t.privateKey), Promise.resolve(this.addDelegate(t.address, {\n        delegateType: r,\n        expiresIn: e\n      })).then(function (r) {\n        return {\n          kp: t,\n          txHash: r\n        };\n      });\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.signJWT = function (r, e) {\n    try {\n      if (\"function\" != typeof this.signer) throw new Error(\"No signer configured\");\n      var t = {\n        signer: this.signer,\n        alg: \"ES256K-R\",\n        issuer: this.did\n      };\n      return e && (t.expiresIn = e), Promise.resolve(o(r, t));\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, d.verifyJWT = function (r, e, t) {\n    try {\n      return void 0 === t && (t = this.did), Promise.resolve(s(r, {\n        resolver: e,\n        audience: t\n      }));\n    } catch (r) {\n      return Promise.reject(r);\n    }\n  }, a;\n}();\n\nexport default g; //# sourceMappingURL=index.esm.js.map","map":null,"metadata":{},"sourceType":"module"}